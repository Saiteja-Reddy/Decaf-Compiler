; ModuleID = 'Decaf compiler'
source_filename = "Decaf compiler"

@0 = private unnamed_addr constant [10 x i8] c"there %d\0A\00"

define void @main() {
entry:
  %result = alloca i32
  store i32 0, i32* %result
  %0 = load i32, i32* %result
  %addEqualToTmp = add i32 %0, 12
  store i32 %addEqualToTmp, i32* %result
  %1 = load i32, i32* %result
  %equalcomparetmp = icmp eq i32 %1, 1
  br i1 %equalcomparetmp, label %if, label %ifcont

if:                                               ; preds = %entry
  %2 = load i32, i32* %result
  %addtmp = add i32 121, %2
  %3 = call i32 @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @0, i32 0, i32 0), i32 %addtmp)
  br label %ifcont

ifcont:                                           ; preds = %if, %entry
  ret void
}

declare i32 @printf(i8*, i32)
